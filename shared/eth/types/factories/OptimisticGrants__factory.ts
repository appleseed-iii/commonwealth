/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OptimisticGrants } from "../OptimisticGrants";

export class OptimisticGrants__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    __governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptimisticGrants> {
    return super.deploy(
      _token,
      __governance,
      overrides || {}
    ) as Promise<OptimisticGrants>;
  }
  getDeployTransaction(
    _token: string,
    __governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, __governance, overrides || {});
  }
  attach(address: string): OptimisticGrants {
    return super.attach(address) as OptimisticGrants;
  }
  connect(signer: Signer): OptimisticGrants__factory {
    return super.connect(signer) as OptimisticGrants__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimisticGrants {
    return new Contract(address, _abi, signerOrProvider) as OptimisticGrants;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "__governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_expiration",
        type: "uint128",
      },
    ],
    name: "configureGrant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "grants",
    outputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "expiration",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "solvency",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516107ec3803806107ec83398101604081905261002f91610064565b600080546001600160a01b0319166001600160a01b039290921691909117905560601b6001600160601b0319166080526100b5565b60008060408385031215610076578182fd5b82516100818161009d565b60208401519092506100928161009d565b809150509250929050565b6001600160a01b03811681146100b257600080fd5b50565b60805160601c6107046100e8600039600081816101440152818161024f0152818161037201526103c301526107046000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c8063b6b55f251161005b578063b6b55f25146100c5578063b869cea3146100d8578063d16649761461012c578063fc0c546a1461013f57600080fd5b8062f714ce146100815780631e83409a14610096578063773c5049146100a9575b600080fd5b61009461008f366004610636565b61017e565b005b6100946100a436600461059b565b6102d1565b6100b260015481565b6040519081526020015b60405180910390f35b6100946100d336600461061e565b6103a1565b61010c6100e636600461059b565b6002602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016100bc565b61009461013a3660046105bc565b610462565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b6000546001600160a01b031633146101cb5760405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b60448201526064015b60405180910390fd5b6001548211156102125760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064016101c2565b816001600082825461022491906106a1565b909155505060405163a9059cbb60e01b81526001600160a01b038281166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044015b602060405180830381600087803b15801561029457600080fd5b505af11580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc91906105fe565b505050565b33600090815260026020526040902054600160801b90046001600160801b031642101561032d5760405162461bcd60e51b815260206004820152600a6024820152696e6f74206d617475726560b01b60448201526064016101c2565b3360009081526002602052604080822080549290555163a9059cbb60e01b81526001600160a01b0383811660048301526001600160801b0390921660248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9060440161027a565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561040f57600080fd5b505af1158015610423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044791906105fe565b50806001600082825461045a9190610661565b909155505050565b6000546001600160a01b031633146104aa5760405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b60448201526064016101c2565b6001600160a01b0383166000908152600260205260409020546001600160801b03908116908316811015610507576104e28184610679565b6001600160801b0316600160008282546104fc91906106a1565b909155506105319050565b6105118382610679565b6001600160801b03166001600082825461052b9190610661565b90915550505b506001600160a01b0390921660009081526002602052604090206001600160801b03928316600160801b0292909116919091179055565b80356001600160a01b038116811461057f57600080fd5b919050565b80356001600160801b038116811461057f57600080fd5b6000602082840312156105ac578081fd5b6105b582610568565b9392505050565b6000806000606084860312156105d0578182fd5b6105d984610568565b92506105e760208501610584565b91506105f560408501610584565b90509250925092565b60006020828403121561060f578081fd5b815180151581146105b5578182fd5b60006020828403121561062f578081fd5b5035919050565b60008060408385031215610648578182fd5b8235915061065860208401610568565b90509250929050565b60008219821115610674576106746106b8565b500190565b60006001600160801b0383811690831681811015610699576106996106b8565b039392505050565b6000828210156106b3576106b36106b8565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220240bbce0478250467a83becaae3d496a639f0d1e11bef6264592064e310fc24664736f6c63430008040033";
