/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MerkleRewards } from "../MerkleRewards";

export class MerkleRewards__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _rewardsRoot: BytesLike,
    _token: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleRewards> {
    return super.deploy(
      _rewardsRoot,
      _token,
      _lockingVault,
      overrides || {}
    ) as Promise<MerkleRewards>;
  }
  getDeployTransaction(
    _rewardsRoot: BytesLike,
    _token: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsRoot,
      _token,
      _lockingVault,
      overrides || {}
    );
  }
  attach(address: string): MerkleRewards {
    return super.attach(address) as MerkleRewards;
  }
  connect(signer: Signer): MerkleRewards__factory {
    return super.connect(signer) as MerkleRewards__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleRewards {
    return new Contract(address, _abi, signerOrProvider) as MerkleRewards;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_rewardsRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ILockingVault",
        name: "_lockingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claimAndDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockingVault",
    outputs: [
      {
        internalType: "contract ILockingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161084c38038061084c83398101604081905261002f91610119565b6000839055606082901b6001600160601b031916608052600280546001600160a01b0319166001600160a01b0383811691821790925560405163095ea7b360e01b81526004810191909152600019602482015284918491849183169063095ea7b390604401602060405180830381600087803b1580156100ae57600080fd5b505af11580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e691906100f2565b50505050505050610173565b600060208284031215610103578081fd5b81518015158114610112578182fd5b9392505050565b60008060006060848603121561012d578182fd5b83519250602084015161013f8161015b565b60408501519092506101508161015b565b809150509250925092565b6001600160a01b038116811461017057600080fd5b50565b60805160601c6106b56101976000396000818160fb015261018101526106b56000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309ed28f1146100675780630a33e8c21461007c578063217863b71461008f578063c884ef83146100ab578063d2a04345146100cb578063fc0c546a146100f6575b600080fd5b61007a6100753660046105d0565b61011d565b005b61007a61008a36600461055b565b610205565b61009860005481565b6040519081526020015b60405180910390f35b6100986100b936600461051a565b60016020526000908152604090205481565b6002546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a2565b6100de7f000000000000000000000000000000000000000000000000000000000000000081565b61015b858585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061030b92505050565b60405163a9059cbb60e01b81526001600160a01b038281166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156101c557600080fd5b505af11580156101d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fd919061053b565b505050505050565b6001600160a01b0385166102575760405162461bcd60e51b81526020600482015260146024820152732d32b9379030b23239103232b632b3b0ba34b7b760611b60448201526064015b60405180910390fd5b610295868585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061030b92505050565b600254604051633d14d1b760e21b81526001600160a01b0383811660048301526024820189905287811660448301529091169063f45346dc90606401600060405180830381600087803b1580156102eb57600080fd5b505af11580156102ff573d6000803e3d6000fd5b50505050505050505050565b6040516bffffffffffffffffffffffff193360601b16602082015260348101839052600090605401604051602081830303815290604052805190602001209050610358826000548361041c565b6103945760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b604482015260640161024e565b3360009081526001602052604090205483906103b1908690610636565b11156103f25760405162461bcd60e51b815260206004820152601060248201526f086d8c2d2dacac840e8dede40daeac6d60831b604482015260640161024e565b3360009081526001602052604081208054869290610411908490610636565b909155505050505050565b6000826104298584610432565b14949350505050565b600081815b84518110156104ac57600085828151811061046257634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116104885760008381526020829052604090209250610499565b600081815260208490526040902092505b50806104a48161064e565b915050610437565b509392505050565b80356001600160a01b03811681146104cb57600080fd5b919050565b60008083601f8401126104e1578182fd5b50813567ffffffffffffffff8111156104f8578182fd5b6020830191508360208260051b850101111561051357600080fd5b9250929050565b60006020828403121561052b578081fd5b610534826104b4565b9392505050565b60006020828403121561054c578081fd5b81518015158114610534578182fd5b60008060008060008060a08789031215610573578182fd5b86359550610583602088016104b4565b945060408701359350606087013567ffffffffffffffff8111156105a5578283fd5b6105b189828a016104d0565b90945092506105c49050608088016104b4565b90509295509295509295565b6000806000806000608086880312156105e7578081fd5b8535945060208601359350604086013567ffffffffffffffff81111561060b578182fd5b610617888289016104d0565b909450925061062a9050606087016104b4565b90509295509295909350565b6000821982111561064957610649610669565b500190565b600060001982141561066257610662610669565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c26da1a5788c42fe5f0f9222bb0a004f63dc15d8877895784d14d1f510b84ad764736f6c63430008040033";
