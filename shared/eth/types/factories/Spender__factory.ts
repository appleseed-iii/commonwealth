/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Spender } from "../Spender";

export class Spender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _spender: string,
    _token: string,
    _smallSpendLimit: BigNumberish,
    _mediumSpendLimit: BigNumberish,
    _highSpendLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Spender> {
    return super.deploy(
      _owner,
      _spender,
      _token,
      _smallSpendLimit,
      _mediumSpendLimit,
      _highSpendLimit,
      overrides || {}
    ) as Promise<Spender>;
  }
  getDeployTransaction(
    _owner: string,
    _spender: string,
    _token: string,
    _smallSpendLimit: BigNumberish,
    _mediumSpendLimit: BigNumberish,
    _highSpendLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _spender,
      _token,
      _smallSpendLimit,
      _mediumSpendLimit,
      _highSpendLimit,
      overrides || {}
    );
  }
  attach(address: string): Spender {
    return super.attach(address) as Spender;
  }
  connect(signer: Signer): Spender__factory {
    return super.connect(signer) as Spender__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Spender {
    return new Contract(address, _abi, signerOrProvider) as Spender;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_smallSpendLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mediumSpendLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_highSpendLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockExpenditure",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "highSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "highSpendLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "mediumSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mediumSpendLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "limits",
        type: "uint256[]",
      },
    ],
    name: "setLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "smallSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smallSpendLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ba2380380610ba283398101604081905261002f9161010f565b600080546001600160a01b0319163317905561006c856001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6100758661009c565b60609390931b6001600160601b0319166080526003919091556004556005555061018f9050565b6000546001600160a01b031633146100ed5760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060008060008060c08789031215610127578182fd5b865161013281610177565b602088015190965061014381610177565b604088015190955061015481610177565b80945050606087015192506080870151915060a087015190509295509295509295565b6001600160a01b038116811461018c57600080fd5b50565b60805160601c6109e06101c26000396000818161025001528181610403015281816104ae015261071c01526109e06000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639c19fa8111610097578063d6343f1411610066578063d6343f1414610222578063ec36ca8c1461022b578063fc0c546a1461024b578063fe9fbb801461027257600080fd5b80639c19fa81146101c0578063b6a5d7de146101c9578063b9181611146101dc578063ce0891d51461020f57600080fd5b806327c97fa5116100d357806327c97fa51461015c57806333fe56761461016f5780635919ffb2146101825780638da5cb5b1461019557600080fd5b806303e41d20146101055780630d9460a01461011a57806313af40351461012d578063157e664a14610140575b600080fd5b6101186101133660046108ec565b61029e565b005b6101186101283660046108ec565b6102e7565b61011861013b3660046107bb565b610323565b61014960035481565b6040519081526020015b60405180910390f35b61011861016a3660046107bb565b61036f565b61011861017d3660046108ec565b6103ba565b6101186101903660046107dc565b61052f565b6000546101a8906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b61014960045481565b6101186101d73660046107bb565b6105e9565b6101ff6101ea3660046107bb565b60016020526000908152604090205460ff1681565b6040519015158152602001610153565b61011861021d3660046108ec565b610641565b61014960055481565b6101496102393660046108bc565b60026020526000908152604090205481565b6101a87f000000000000000000000000000000000000000000000000000000000000000081565b6101ff6102803660046107bb565b6001600160a01b031660009081526001602052604090205460ff1690565b3360009081526001602052604090205460ff166102d65760405162461bcd60e51b81526004016102cd90610941565b60405180910390fd5b6102e38282600454610679565b5050565b3360009081526001602052604090205460ff166103165760405162461bcd60e51b81526004016102cd90610941565b6102e38282600354610679565b6000546001600160a01b0316331461034d5760405162461bcd60e51b81526004016102cd90610917565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103995760405162461bcd60e51b81526004016102cd90610917565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146103e45760405162461bcd60e51b81526004016102cd90610917565b600019821415610488576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561044d57600080fd5b505afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048591906108d4565b91505b60405163a9059cbb60e01b81526001600160a01b038281166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a919061089c565b505050565b6000546001600160a01b031633146105595760405162461bcd60e51b81526004016102cd90610917565b8060008151811061057a57634e487b7160e01b600052603260045260246000fd5b6020026020010151600381905550806001815181106105a957634e487b7160e01b600052603260045260246000fd5b6020026020010151600481905550806002815181106105d857634e487b7160e01b600052603260045260246000fd5b602002602001015160058190555050565b6000546001600160a01b031633146106135760405162461bcd60e51b81526004016102cd90610917565b61063e816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b3360009081526001602052604090205460ff166106705760405162461bcd60e51b81526004016102cd90610941565b6102e382826005545b43600090815260026020526040902054816106948286610970565b11156106d95760405162461bcd60e51b815260206004820152601460248201527314dc195b9908131a5b5a5d08115e18d95959195960621b60448201526064016102cd565b6106e38185610970565b4360009081526002602052604090819020919091555163a9059cbb60e01b81526001600160a01b038481166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561076057600080fd5b505af1158015610774573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610798919061089c565b5050505050565b80356001600160a01b03811681146107b657600080fd5b919050565b6000602082840312156107cc578081fd5b6107d58261079f565b9392505050565b600060208083850312156107ee578182fd5b823567ffffffffffffffff80821115610805578384fd5b818501915085601f830112610818578384fd5b81358181111561082a5761082a610994565b8060051b604051601f19603f8301168101818110858211171561084f5761084f610994565b604052828152858101935084860182860187018a101561086d578788fd5b8795505b8386101561088f578035855260019590950194938601938601610871565b5098975050505050505050565b6000602082840312156108ad578081fd5b815180151581146107d5578182fd5b6000602082840312156108cd578081fd5b5035919050565b6000602082840312156108e5578081fd5b5051919050565b600080604083850312156108fe578081fd5b8235915061090e6020840161079f565b90509250929050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b60208082526015908201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b604082015260600190565b6000821982111561098f57634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dc1689d6f29c6ebc81139e02000c4c2d4ca19a89a3cd176e01ba3649cc61c66264736f6c63430008040033";
