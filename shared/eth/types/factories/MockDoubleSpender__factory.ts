/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockDoubleSpender } from "../MockDoubleSpender";

export class MockDoubleSpender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockDoubleSpender> {
    return super.deploy(overrides || {}) as Promise<MockDoubleSpender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockDoubleSpender {
    return super.attach(address) as MockDoubleSpender;
  }
  connect(signer: Signer): MockDoubleSpender__factory {
    return super.connect(signer) as MockDoubleSpender__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDoubleSpender {
    return new Contract(address, _abi, signerOrProvider) as MockDoubleSpender;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Spender",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "doubleSpendLarge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Spender",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "doubleSpendMedium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Spender",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "doubleSpendSmall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632b3fadc6146100465780638ae031951461005b57806395e18a691461006e575b600080fd5b610059610054366004610268565b610081565b005b610059610069366004610268565b610146565b61005961007c366004610268565b6101d7565b60405163ce0891d560e01b8152600481018290523360248201526001600160a01b0383169063ce0891d590604401600060405180830381600087803b1580156100c957600080fd5b505af11580156100dd573d6000803e3d6000fd5b505060405163ce0891d560e01b8152600481018490523360248201526001600160a01b038516925063ce0891d591506044015b600060405180830381600087803b15801561012a57600080fd5b505af115801561013e573d6000803e3d6000fd5b505050505050565b604051626ca30560e51b8152600481018290523360248201526001600160a01b03831690630d9460a090604401600060405180830381600087803b15801561018d57600080fd5b505af11580156101a1573d6000803e3d6000fd5b5050604051626ca30560e51b8152600481018490523360248201526001600160a01b0385169250630d9460a09150604401610110565b604051621f20e960e51b8152600481018290523360248201526001600160a01b038316906303e41d2090604401600060405180830381600087803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b5050604051621f20e960e51b8152600481018490523360248201526001600160a01b03851692506303e41d209150604401610110565b6000806040838503121561027a578182fd5b82356001600160a01b0381168114610290578283fd5b94602093909301359350505056fea2646970667358221220596a20aae8aba36170909fe5dc63ebf0284c2447f4b3f40f01dc76521100cc5b64736f6c63430008040033";
