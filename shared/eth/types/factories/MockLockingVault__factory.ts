/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockLockingVault } from "../MockLockingVault";

export class MockLockingVault__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLockingVault> {
    return super.deploy(overrides || {}) as Promise<MockLockingVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockLockingVault {
    return super.attach(address) as MockLockingVault;
  }
  connect(signer: Signer): MockLockingVault__factory {
    return super.connect(signer) as MockLockingVault__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLockingVault {
    return new Contract(address, _abi, signerOrProvider) as MockLockingVault;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundedAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "firstDelegation",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063eed50a3214610046578063f45346dc1461008c578063fc7e286d146100a1575b600080fd5b61006f610054366004610148565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610169565b6100cf565b005b6100c16100af366004610148565b60006020819052908152604090205481565b604051908152602001610083565b6001600160a01b038316600090815260208190526040812080548492906100f79084906101a4565b90915550506001600160a01b03928316600090815260016020526040902080546001600160a01b031916919093161790915550565b80356001600160a01b038116811461014357600080fd5b919050565b600060208284031215610159578081fd5b6101628261012c565b9392505050565b60008060006060848603121561017d578182fd5b6101868461012c565b92506020840135915061019b6040850161012c565b90509250925092565b600082198211156101c357634e487b7160e01b81526011600452602481fd5b50019056fea26469706673582212200f8d76a189371358cb7067ddf801b434176505ed8a08bbba49edc8235d365d3264736f6c63430008040033";
