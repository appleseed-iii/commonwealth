/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TestTreasury } from "../TestTreasury";

export class TestTreasury__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTreasury> {
    return super.deploy(_governance, overrides || {}) as Promise<TestTreasury>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): TestTreasury {
    return super.attach(address) as TestTreasury;
  }
  connect(signer: Signer): TestTreasury__factory {
    return super.connect(signer) as TestTreasury__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTreasury {
    return new Contract(address, _abi, signerOrProvider) as TestTreasury;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dummy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "genericCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummy",
        type: "uint256",
      },
    ],
    name: "updateDummy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161086f38038061086f83398101604081905261002f916100c5565b600080546001600160a01b031916331790558061004b81610052565b50506100f3565b6000546001600160a01b031633146100a35760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100d6578081fd5b81516001600160a01b03811681146100ec578182fd5b9392505050565b61076d806101026000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610157578063b6a5d7de1461018f578063b9181611146101af578063ca5f9d06146101ef578063e1f21c671461020f578063fe9fbb801461022f57600080fd5b806313af4035146100ac57806327c97fa5146100ce57806332e43a11146100ee5780634650c308146101175780638522d1b21461013757600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100cc6100c73660046105b0565b610268565b005b3480156100da57600080fd5b506100cc6100e93660046105b0565b6102bd565b3480156100fa57600080fd5b5061010460025481565b6040519081526020015b60405180910390f35b34801561012357600080fd5b506100cc61013236600461060c565b610308565b34801561014357600080fd5b506100cc61015236600461068a565b6103d5565b34801561016357600080fd5b50600054610177906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b34801561019b57600080fd5b506100cc6101aa3660046105b0565b6104dd565b3480156101bb57600080fd5b506101df6101ca3660046105b0565b60016020526000908152604090205460ff1681565b604051901515815260200161010e565b3480156101fb57600080fd5b506100cc61020a3660046106e5565b600255565b34801561021b57600080fd5b506100cc61022a3660046105d1565b610535565b34801561023b57600080fd5b506101df61024a3660046105b0565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b0316331461029b5760405162461bcd60e51b81526004016102929061070d565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102e75760405162461bcd60e51b81526004016102929061070d565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146103325760405162461bcd60e51b81526004016102929061070d565b6000836001600160a01b0316838360405161034e9291906106fd565b6000604051808303816000865af19150503d806000811461038b576040519150601f19603f3d011682016040523d82523d6000602084013e610390565b606091505b50509050806103cf5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606401610292565b50505050565b6000546001600160a01b031633146103ff5760405162461bcd60e51b81526004016102929061070d565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561045a576040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156103cf573d6000803e3d6000fd5b60405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905284169063a9059cbb906044015b602060405180830381600087803b1580156104a557600080fd5b505af11580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf91906106c5565b6000546001600160a01b031633146105075760405162461bcd60e51b81526004016102929061070d565b610532816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b6000546001600160a01b0316331461055f5760405162461bcd60e51b81526004016102929061070d565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b39060440161048b565b80356001600160a01b03811681146105ab57600080fd5b919050565b6000602082840312156105c1578081fd5b6105ca82610594565b9392505050565b6000806000606084860312156105e5578182fd5b6105ee84610594565b92506105fc60208501610594565b9150604084013590509250925092565b600080600060408486031215610620578283fd5b61062984610594565b9250602084013567ffffffffffffffff80821115610645578384fd5b818601915086601f830112610658578384fd5b813581811115610666578485fd5b876020828501011115610677578485fd5b6020830194508093505050509250925092565b60008060006060848603121561069e578283fd5b6106a784610594565b9250602084013591506106bc60408501610594565b90509250925092565b6000602082840312156106d6578081fd5b815180151581146105ca578182fd5b6000602082840312156106f6578081fd5b5035919050565b8183823760009101908152919050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b60408201526060019056fea2646970667358221220716ac1a7e346ea44743cfb8ceb8767daee6fff5f9f8047456a375b944d376c1f64736f6c63430008040033";
