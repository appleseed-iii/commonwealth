/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { GSCVault } from "../GSCVault";

export class GSCVault__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _coreVoting: string,
    _votingPowerBound: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GSCVault> {
    return super.deploy(
      _coreVoting,
      _votingPowerBound,
      _owner,
      overrides || {}
    ) as Promise<GSCVault>;
  }
  getDeployTransaction(
    _coreVoting: string,
    _votingPowerBound: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _coreVoting,
      _votingPowerBound,
      _owner,
      overrides || {}
    );
  }
  attach(address: string): GSCVault {
    return super.attach(address) as GSCVault;
  }
  connect(signer: Signer): GSCVault__factory {
    return super.connect(signer) as GSCVault__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GSCVault {
    return new Contract(address, _abi, signerOrProvider) as GSCVault;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "_coreVoting",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_votingPowerBound",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Kicked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "MembershipProved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coreVoting",
    outputs: [
      {
        internalType: "contract ICoreVoting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "getUserVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "kick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "joined",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "proveMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "_newVoting",
        type: "address",
      },
    ],
    name: "setCoreVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idleDuration",
        type: "uint256",
      },
    ],
    name: "setIdleDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBound",
        type: "uint256",
      },
    ],
    name: "setVotePowerBound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPowerBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526205460060055534801561001757600080fd5b50604051620012c1380380620012c1833981016040819052610038916100ea565b60008054336001600160a01b031991821617909155600380549091166001600160a01b038516179055600482905561006f81610077565b505050610144565b6000546001600160a01b031633146100c85760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000606084860312156100fe578283fd5b83516101098161012c565b6020850151604086015191945092506101218161012c565b809150509250925092565b6001600160a01b038116811461014157600080fd5b50565b61116d80620001546000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80637e280246116100a2578063b6a5d7de11610071578063b6a5d7de1461021c578063b91816111461022f578063e7f3c69c14610262578063e91f323514610282578063fe9fbb801461029557600080fd5b80637e280246146101c25780638da5cb5b146101d5578063ad292ff814610200578063ae4b36281461020957600080fd5b806322905a6c116100de57806322905a6c1461018057806327c97fa51461019357806338e02bf7146101a65780633eba045b146101af57600080fd5b8062fe809c1461010f57806308ae4b0c1461012457806309960f001461015a57806313af40351461016d575b600080fd5b61012261011d366004610f8e565b6102c1565b005b610147610132366004610e0b565b60026020526000908152604090206001015481565b6040519081526020015b60405180910390f35b610122610168366004610f05565b6102f9565b61012261017b366004610e0b565b61077c565b61012261018e366004610e2e565b6107c8565b6101226101a1366004610e0b565b610aba565b61014760045481565b6101226101bd366004610f8e565b610b05565b6101226101d0366004610e0b565b610b34565b6000546101e8906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b61014760055481565b6003546101e8906001600160a01b031681565b61012261022a366004610e0b565b610b80565b61025261023d366004610e0b565b60016020526000908152604090205460ff1681565b6040519015158152602001610151565b610275610270366004610e0b565b610bd8565b6040516101519190611006565b610147610290366004610e81565b610c4e565b6102526102a3366004610e0b565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146102f45760405162461bcd60e51b81526004016102eb90611053565b60405180910390fd5b600555565b8261031457634e487b7160e01b600052600160045260246000fd5b60005b8381101561052857600061032c8260016110c2565b90505b848110156104055785858281811061035757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061036c9190610e0b565b6001600160a01b031686868481811061039557634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103aa9190610e0b565b6001600160a01b031614156103f35760405162461bcd60e51b815260206004820152600f60248201526e191d5c1b1a58d85d19481d985d5b1d608a1b60448201526064016102eb565b806103fd816110f1565b91505061032f565b506003546000906001600160a01b031663af7a060c87878581811061043a57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061044f9190610e0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561048e57600080fd5b505afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190610f6e565b9050806105155760405162461bcd60e51b815260206004820152601960248201527f566f74696e67207661756c74206e6f7420617070726f7665640000000000000060448201526064016102eb565b5080610520816110f1565b915050610317565b506000805b8481101561064b57600086868381811061055757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061056c9190610e0b565b6001600160a01b031663e91f3235336105866001436110da565b8888878181106105a657634e487b7160e01b600052603260045260246000fd5b90506020028101906105b8919061107d565b6040518563ffffffff1660e01b81526004016105d79493929190610fbe565b602060405180830381600087803b1580156105f157600080fd5b505af1158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190610fa6565b905061063581846110c2565b9250508080610643906110f1565b91505061052d565b506004548110156106915760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820766f74657360801b60448201526064016102eb565b33600090815260026020526040902060010154156106c9573360009081526002602052604090206106c3908686610cda565b5061073f565b6040518060400160405280868680806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250504260209384015250338152600282526040902082518051919261073092849290910190610d3d565b50602082015181600101559050505b60405142815233907ff1e092311eefceee7206049c87d17464c34a7b92b85779b0b835ddb292a42e70906020015b60405180910390a25050505050565b6000546001600160a01b031633146107a65760405162461bcd60e51b81526004016102eb90611053565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831660009081526002602090815260408083208054825181850281018501909352808352919290919083018282801561083257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610814575b505050505090506000805b8251811015610a105760035483516001600160a01b039091169063af7a060c9085908490811061087d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016108b091906001600160a01b0391909116815260200190565b60206040518083038186803b1580156108c857600080fd5b505afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190610f6e565b156109fe57600083828151811061092757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031663e91f32358860014361094b91906110da565b89898781811061096b57634e487b7160e01b600052603260045260246000fd5b905060200281019061097d919061107d565b6040518563ffffffff1660e01b815260040161099c9493929190610fbe565b602060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190610fa6565b90506109fa81846110c2565b9250505b80610a08816110f1565b91505061083d565b506004548110610a525760405162461bcd60e51b815260206004820152600d60248201526c4e6f74206b69636b2d61626c6560981b60448201526064016102eb565b6001600160a01b038516600090815260026020526040812090610a758282610d92565b60018201600090555050846001600160a01b03167f8684348ed72cd103be12fcb99e9c5917294a8092ccd4808d1cd7b19daf9829914360405161076d91815260200190565b6000546001600160a01b03163314610ae45760405162461bcd60e51b81526004016102eb90611053565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314610b2f5760405162461bcd60e51b81526004016102eb90611053565b600455565b6000546001600160a01b03163314610b5e5760405162461bcd60e51b81526004016102eb90611053565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610baa5760405162461bcd60e51b81526004016102eb90611053565b610bd5816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b6001600160a01b038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015610c4257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c24575b50505050509050919050565b600080546001600160a01b0386811691161415610c6f5750620186a0610cd2565b6001600160a01b03851660009081526002602052604090206001015415801590610cc157506005546001600160a01b0386166000908152600260205260409020600101544291610cbe916110c2565b11155b15610cce57506001610cd2565b5060005b949350505050565b828054828255906000526020600020908101928215610d2d579160200282015b82811115610d2d5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610cfa565b50610d39929150610dac565b5090565b828054828255906000526020600020908101928215610d2d579160200282015b82811115610d2d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d5d565b5080546000825590600052602060002090810190610bd591905b5b80821115610d395760008155600101610dad565b60008083601f840112610dd2578182fd5b50813567ffffffffffffffff811115610de9578182fd5b6020830191508360208260051b8501011115610e0457600080fd5b9250929050565b600060208284031215610e1c578081fd5b8135610e2781611122565b9392505050565b600080600060408486031215610e42578182fd5b8335610e4d81611122565b9250602084013567ffffffffffffffff811115610e68578283fd5b610e7486828701610dc1565b9497909650939450505050565b60008060008060608587031215610e96578081fd5b8435610ea181611122565b935060208501359250604085013567ffffffffffffffff80821115610ec4578283fd5b818701915087601f830112610ed7578283fd5b813581811115610ee5578384fd5b886020828501011115610ef6578384fd5b95989497505060200194505050565b60008060008060408587031215610f1a578384fd5b843567ffffffffffffffff80821115610f31578586fd5b610f3d88838901610dc1565b90965094506020870135915080821115610f55578384fd5b50610f6287828801610dc1565b95989497509550505050565b600060208284031215610f7f578081fd5b81518015158114610e27578182fd5b600060208284031215610f9f578081fd5b5035919050565b600060208284031215610fb7578081fd5b5051919050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b6020808252825182820181905260009190848201906040850190845b818110156110475783516001600160a01b031683529284019291840191600101611022565b50909695505050505050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b6000808335601e19843603018112611093578283fd5b83018035915067ffffffffffffffff8211156110ad578283fd5b602001915036819003821315610e0457600080fd5b600082198211156110d5576110d561110c565b500190565b6000828210156110ec576110ec61110c565b500390565b60006000198214156111055761110561110c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610bd557600080fdfea264697066735822122025176d142f00883e11d7d16e89115a0d8da980acdb8914e34b672e11b40acef664736f6c63430008040033";
