/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { NonVotingVault } from "../NonVotingVault";

export class NonVotingVault__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NonVotingVault> {
    return super.deploy(
      _owner,
      _lockingVault,
      overrides || {}
    ) as Promise<NonVotingVault>;
  }
  getDeployTransaction(
    _owner: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _lockingVault, overrides || {});
  }
  attach(address: string): NonVotingVault {
    return super.attach(address) as NonVotingVault;
  }
  connect(signer: Signer): NonVotingVault__factory {
    return super.connect(signer) as NonVotingVault__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonVotingVault {
    return new Contract(address, _abi, signerOrProvider) as NonVotingVault;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract ILockingVault",
        name: "_lockingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockingVault",
    outputs: [
      {
        internalType: "contract ILockingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000f9238038062000f92833981016040819052620000349162000574565b600080546001600160a01b0319163317905562000051826200012d565b600280546001600160a01b0319166001600160a01b03831690811790915560408051637e062a3560e11b815290516000929163fc0c546a91600480830192602092919082900301818787803b158015620000aa57600080fd5b505af1158015620000bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e59190620005d4565b606081901b6001600160601b03191660805260025490915062000124906001600160a01b038084169116600019620001a2602090811b6200036817901c565b505050620006ab565b6000546001600160a01b03163314620001805760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b801580620002305750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015620001f357600080fd5b505afa15801562000208573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022e9190620005f3565b155b620002a45760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840162000177565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002fc9185916200030116565b505050565b60006200035d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620003df60201b620004c4179092919060201c565b805190915015620002fc57808060200190518101906200037e9190620005b2565b620002fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000177565b6060620003f08484600085620003fa565b90505b9392505050565b6060824710156200045d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000177565b6001600160a01b0385163b620004b65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000177565b600080866001600160a01b03168587604051620004d491906200060c565b60006040518083038185875af1925050503d806000811462000513576040519150601f19603f3d011682016040523d82523d6000602084013e62000518565b606091505b5090925090506200052b82828662000536565b979650505050505050565b6060831562000547575081620003f3565b825115620005585782518084602001fd5b8160405162461bcd60e51b81526004016200017791906200062a565b6000806040838503121562000587578182fd5b8251620005948162000692565b6020840151909250620005a78162000692565b809150509250929050565b600060208284031215620005c4578081fd5b81518015158114620003f3578182fd5b600060208284031215620005e6578081fd5b8151620003f38162000692565b60006020828403121562000605578081fd5b5051919050565b60008251620006208184602087016200065f565b9190910192915050565b60208152600082518060208401526200064b8160408501602087016200065f565b601f01601f19169190910160400192915050565b60005b838110156200067c57818101518382015260200162000662565b838111156200068c576000848401525b50505050565b6001600160a01b0381168114620006a857600080fd5b50565b60805160601c6108c1620006d160003960008181610160015261024c01526108c16000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c8063b6a5d7de11610066578063b6a5d7de14610102578063b918161114610115578063d2a0434514610148578063fc0c546a1461015b578063fe9fbb801461018257600080fd5b8062f714ce1461009757806313af4035146100ac57806327c97fa5146100bf5780638da5cb5b146100d2575b600080fd5b6100aa6100a53660046107b7565b6101ae565b005b6100aa6100ba366004610765565b610279565b6100aa6100cd366004610765565b6102c5565b6000546100e5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100aa610110366004610765565b610310565b610138610123366004610765565b60016020526000908152604090205460ff1681565b60405190151581526020016100f9565b6002546100e5906001600160a01b031681565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b610138610190366004610765565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146101e15760405162461bcd60e51b81526004016101d890610831565b60405180910390fd5b600254604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b506102759250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905082846104dd565b5050565b6000546001600160a01b031633146102a35760405162461bcd60e51b81526004016101d890610831565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102ef5760405162461bcd60e51b81526004016101d890610831565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b0316331461033a5760405162461bcd60e51b81526004016101d890610831565b610365816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b8015806103f15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156103b757600080fd5b505afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef919061079f565b155b61045c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101d8565b6040516001600160a01b0383166024820152604481018290526104bf90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261050d565b505050565b60606104d384846000856105df565b90505b9392505050565b6040516001600160a01b0383166024820152604481018290526104bf90849063a9059cbb60e01b90606401610488565b6000610562826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104c49092919063ffffffff16565b8051909150156104bf5780806020019051810190610580919061077f565b6104bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d8565b6060824710156106405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d8565b6001600160a01b0385163b6106975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d8565b600080866001600160a01b031685876040516106b391906107e2565b60006040518083038185875af1925050503d80600081146106f0576040519150601f19603f3d011682016040523d82523d6000602084013e6106f5565b606091505b5091509150610705828286610710565b979650505050505050565b6060831561071f5750816104d6565b82511561072f5782518084602001fd5b8160405162461bcd60e51b81526004016101d891906107fe565b80356001600160a01b038116811461076057600080fd5b919050565b600060208284031215610776578081fd5b6104d682610749565b600060208284031215610790578081fd5b815180151581146104d6578182fd5b6000602082840312156107b0578081fd5b5051919050565b600080604083850312156107c9578081fd5b823591506107d960208401610749565b90509250929050565b600082516107f481846020870161085b565b9190910192915050565b602081526000825180602084015261081d81604085016020870161085b565b601f01601f19169190910160400192915050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b60005b8381101561087657818101518382015260200161085e565b83811115610885576000848401525b5050505056fea2646970667358221220553b7726a4963e75383c819af531196eafa59f3cd86b8e953ac12ae9151310ab64736f6c63430008040033";
