/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { OptimisticRewards } from "../OptimisticRewards";

export class OptimisticRewards__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _startingRoot: BytesLike,
    _proposer: string,
    _revoker: string,
    _token: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptimisticRewards> {
    return super.deploy(
      _governance,
      _startingRoot,
      _proposer,
      _revoker,
      _token,
      _lockingVault,
      overrides || {}
    ) as Promise<OptimisticRewards>;
  }
  getDeployTransaction(
    _governance: string,
    _startingRoot: BytesLike,
    _proposer: string,
    _revoker: string,
    _token: string,
    _lockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _startingRoot,
      _proposer,
      _revoker,
      _token,
      _lockingVault,
      overrides || {}
    );
  }
  attach(address: string): OptimisticRewards {
    return super.attach(address) as OptimisticRewards;
  }
  connect(signer: Signer): OptimisticRewards__factory {
    return super.connect(signer) as OptimisticRewards__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimisticRewards {
    return new Contract(address, _abi, signerOrProvider) as OptimisticRewards;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_startingRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_revoker",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ILockingVault",
        name: "_lockingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claimAndDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockingVault",
    outputs: [
      {
        internalType: "contract ILockingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "proposeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_challengePeriod",
        type: "uint256",
      },
    ],
    name: "setChallengePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "setProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405262093a806008553480156200001857600080fd5b5060405162001070380380620010708339810160408190526200003b91620001ea565b6000859055606082901b6001600160601b031916608052600280546001600160a01b0319166001600160a01b0383811691821790925560405163095ea7b360e01b8152600481019190915260001960248201528691849184918491849184919083169063095ea7b390604401602060405180830381600087803b158015620000c257600080fd5b505af1158015620000d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fd919062000271565b505060038054336001600160a01b031991821617909155600780549091166001600160a01b038b16179055506200013b935086925062000152915050565b620001468662000176565b505050505050620002b3565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6003546001600160a01b03163314620001c85760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008060008060008060c0878903121562000203578182fd5b865162000210816200029a565b6020880151604089015191975095506200022a816200029a565b60608801519094506200023d816200029a565b608088015190935062000250816200029a565b60a088015190925062000263816200029a565b809150509295509295509295565b60006020828403121562000283578081fd5b8151801515811462000293578182fd5b9392505050565b6001600160a01b0381168114620002b057600080fd5b50565b60805160601c610d97620002d9600039600081816102d101526103830152610d976000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638f54532a116100b8578063c884ef831161007c578063c884ef831461027d578063d2a043451461029d578063e91f3235146102b0578063f3f480d9146102c3578063fc0c546a146102cc578063fe9fbb80146102f357600080fd5b80638f54532a14610209578063a8e4fb901461021c578063b6a5d7de1461022f578063b918161114610242578063c635f1ee1461027557600080fd5b8063217863b7116100ff578063217863b7146101a657806327c97fa5146101af5780635d475fdd146101c2578063750588cf146101d55780638da5cb5b146101de57600080fd5b806309ed28f11461013c5780630a33e8c21461015157806313af403514610164578063184a0ae9146101775780631fb4a22814610193575b600080fd5b61014f61014a366004610c5b565b61031f565b005b61014f61015f366004610b1a565b610407565b61014f610172366004610a3f565b61050d565b61018060065481565b6040519081526020015b60405180910390f35b61014f6101a1366004610a3f565b610559565b61018060005481565b61014f6101bd366004610a3f565b6105a5565b61014f6101d0366004610b02565b6105f0565b61018060055481565b6003546101f1906001600160a01b031681565b6040516001600160a01b03909116815260200161018a565b61014f610217366004610b02565b61061f565b6007546101f1906001600160a01b031681565b61014f61023d366004610a3f565b6106a9565b610265610250366004610a3f565b60046020526000908152604090205460ff1681565b604051901515815260200161018a565b61014f6106fe565b61018061028b366004610a3f565b60016020526000908152604090205481565b6002546101f1906001600160a01b031681565b6101806102be366004610a60565b610761565b61018060085481565b6101f17f000000000000000000000000000000000000000000000000000000000000000081565b610265610301366004610a3f565b6001600160a01b031660009081526004602052604090205460ff1690565b61035d858585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061083092505050565b60405163a9059cbb60e01b81526001600160a01b038281166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610ae2565b505050505050565b6001600160a01b0385166104595760405162461bcd60e51b81526020600482015260146024820152732d32b9379030b23239103232b632b3b0ba34b7b760611b60448201526064015b60405180910390fd5b610497868585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061083092505050565b600254604051633d14d1b760e21b81526001600160a01b0383811660048301526024820189905287811660448301529091169063f45346dc90606401600060405180830381600087803b1580156104ed57600080fd5b505af1158015610501573d6000803e3d6000fd5b50505050505050505050565b6003546001600160a01b031633146105375760405162461bcd60e51b815260040161045090610cc1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146105835760405162461bcd60e51b815260040161045090610cc1565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146105cf5760405162461bcd60e51b815260040161045090610cc1565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6003546001600160a01b0316331461061a5760405162461bcd60e51b815260040161045090610cc1565b600855565b6007546001600160a01b031633146106685760405162461bcd60e51b815260206004820152600c60248201526b2737ba10383937b837b9b2b960a11b6044820152606401610450565b6005541580159061067a575060065415155b801561069457506008546006546106919190610ceb565b42115b156106a0576005546000555b60055542600655565b6003546001600160a01b031633146106d35760405162461bcd60e51b815260040161045090610cc1565b6106fb816001600160a01b03166000908152600460205260409020805460ff19166001179055565b50565b3360009081526004602052604090205460ff166107555760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b6044820152606401610450565b60006005819055600655565b6000808061077184860186610b8f565b6040516bffffffffffffffffffffffff1960608b901b1660208201526034810183905291935091506000906054016040516020818303038152906040528051906020012090506107c48260005483610941565b6108005760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b6044820152606401610450565b6001600160a01b0388166000908152600160205260408120546108239085610d03565b9998505050505050505050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810183905260009060540160405160208183030381529060405280519060200120905061087d8260005483610941565b6108b95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b6044820152606401610450565b3360009081526001602052604090205483906108d6908690610ceb565b11156109175760405162461bcd60e51b815260206004820152601060248201526f086d8c2d2dacac840e8dede40daeac6d60831b6044820152606401610450565b3360009081526001602052604081208054869290610936908490610ceb565b909155505050505050565b60008261094e8584610957565b14949350505050565b600081815b84518110156109d157600085828151811061098757634e487b7160e01b600052603260045260246000fd5b602002602001015190508083116109ad57600083815260208290526040902092506109be565b600081815260208490526040902092505b50806109c981610d1a565b91505061095c565b509392505050565b80356001600160a01b03811681146109f057600080fd5b919050565b60008083601f840112610a06578081fd5b50813567ffffffffffffffff811115610a1d578182fd5b6020830191508360208260051b8501011115610a3857600080fd5b9250929050565b600060208284031215610a50578081fd5b610a59826109d9565b9392505050565b60008060008060608587031215610a75578283fd5b610a7e856109d9565b935060208501359250604085013567ffffffffffffffff80821115610aa1578384fd5b818701915087601f830112610ab4578384fd5b813581811115610ac2578485fd5b886020828501011115610ad3578485fd5b95989497505060200194505050565b600060208284031215610af3578081fd5b81518015158114610a59578182fd5b600060208284031215610b13578081fd5b5035919050565b60008060008060008060a08789031215610b32578182fd5b86359550610b42602088016109d9565b945060408701359350606087013567ffffffffffffffff811115610b64578283fd5b610b7089828a016109f5565b9094509250610b839050608088016109d9565b90509295509295509295565b60008060408385031215610ba1578182fd5b8235915060208084013567ffffffffffffffff80821115610bc0578384fd5b818601915086601f830112610bd3578384fd5b813581811115610be557610be5610d4b565b8060051b604051601f19603f83011681018181108582111715610c0a57610c0a610d4b565b604052828152858101935084860182860187018b1015610c28578788fd5b8795505b83861015610c4a578035855260019590950194938601938601610c2c565b508096505050505050509250929050565b600080600080600060808688031215610c72578081fd5b8535945060208601359350604086013567ffffffffffffffff811115610c96578182fd5b610ca2888289016109f5565b9094509250610cb59050606087016109d9565b90509295509295909350565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b60008219821115610cfe57610cfe610d35565b500190565b600082821015610d1557610d15610d35565b500390565b6000600019821415610d2e57610d2e610d35565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220826966ffd59263b94e04c892d87af55cd8d09487724e4cac2def1aa0a7a44bb164736f6c63430008040033";
