/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockHistoryTracker } from "../MockHistoryTracker";

export class MockHistoryTracker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockHistoryTracker> {
    return super.deploy(overrides || {}) as Promise<MockHistoryTracker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockHistoryTracker {
    return super.attach(address) as MockHistoryTracker;
  }
  connect(signer: Signer): MockHistoryTracker__factory {
    return super.connect(signer) as MockHistoryTracker__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockHistoryTracker {
    return new Contract(address, _abi, signerOrProvider) as MockHistoryTracker;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMin",
        type: "uint256",
      },
    ],
    name: "clear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "which",
        type: "uint256",
      },
    ],
    name: "find",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "which",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stale",
        type: "uint256",
      },
    ],
    name: "findAndClear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "loadBounds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loadTop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "toBePushed",
        type: "uint256[]",
      },
    ],
    name: "multiPush",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "peekArrayData",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cd4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063959ac4841161005b578063959ac4841461010457806395d3c7a114610119578063c0fe1af814610121578063c425f7da1461013457600080fd5b806335878cf71461008d5780633c795d29146100b35780633e530e5b146100d05780636dc925fa146100e3575b600080fd5b6100a061009b366004610b50565b610147565b6040519081526020015b60405180910390f35b6100bb61019f565b604080519283526020830191909152016100aa565b6100a06100de366004610b38565b61021a565b6100f66100f1366004610b50565b61026e565b6040516100aa929190610bf0565b610117610112366004610b38565b61043b565b005b6100a061048b565b61011761012f366004610b38565b6104dd565b610117610142366004610ac8565b6105c3565b6000806101736040518060400160405280600881526020016762616c616e63657360c01b815250610662565b90506101958173829bd824b016326a401d083b33d092293333a830868661069b565b9150505b92915050565b60008060006101cd6040518060400160405280600881526020016762616c616e63657360c01b815250610662565b905060006101dc826020015190565b73829bd824b016326a401d083b33d092293333a83060009081526020919091526040902054608081901c956001600160801b03909116945092505050565b6000806102466040518060400160405280600881526020016762616c616e63657360c01b815250610662565b90506102678173829bd824b016326a401d083b33d092293333a83085610717565b9392505050565b606080600061029c6040518060400160405280600881526020016762616c616e63657360c01b815250610662565b905060006102ab826020015190565b73829bd824b016326a401d083b33d092293333a83060009081526020919091526040812091506102db8787610c56565b67ffffffffffffffff81111561030157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561032a578160200160208202803683370190505b50905060006103398888610c56565b67ffffffffffffffff81111561035f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610388578160200160208202803683370190505b5090506000885b8881101561042c5760018582010154845160c082901c916001600160c01b03169082908790869081106103d257634e487b7160e01b600052603260045260246000fd5b602002602001018181525050808585815181106103ff57634e487b7160e01b600052603260045260246000fd5b60209081029190910101528361041481610c6d565b9450505050808061042490610c6d565b91505061038f565b50919890975095505050505050565b60006104666040518060400160405280600881526020016762616c616e63657360c01b815250610662565b90506104878173829bd824b016326a401d083b33d092293333a83084610762565b5050565b6000806104b76040518060400160405280600881526020016762616c616e63657360c01b815250610662565b90506104d78173829bd824b016326a401d083b33d092293333a83061085f565b91505090565b60006105086040518060400160405280600881526020016762616c616e63657360c01b815250610662565b90506000610517826020015190565b73829bd824b016326a401d083b33d092293333a8306000908152602091909152604090208054909150608081901c906001600160801b031681851115610579576105628286856108c0565b6001600160801b038116608086901b1783556105bc565b60405162461bcd60e51b8152602060048201526013602482015272436c656172206f7574206f6620626f756e647360681b60448201526064015b60405180910390fd5b5050505050565b60006105ee6040518060400160405280600881526020016762616c616e63657360c01b815250610662565b905060005b8281101561065c5761064a73829bd824b016326a401d083b33d092293333a83085858481811061063357634e487b7160e01b600052603260045260246000fd5b90506020020135846107629092919063ffffffff16565b8061065481610c6d565b9150506105f3565b50505050565b6040805180820190915260608152600060208201526000610682836108f0565b6040805180820190915293845260208401525090919050565b6000806106a9866020015190565b6001600160a01b0386166000908152602082905260408120805492935091608081901c916001600160801b0390911690806106e7858a8a878761094b565b9150915083821115610709576106fe848387610aaf565b610709858385610abc565b9a9950505050505050505050565b600080610725856020015190565b6001600160a01b0385166000908152602082905260408120805492935091608081901c916001600160801b0390911690610709848883868661094b565b6001600160c01b0381111561079f5760405162461bcd60e51b815260206004820152600360248201526227b7a160e91b60448201526064016105b3565b60006107ac846020015190565b6001600160a01b03841660009081526020829052604081208054929350914360c01b9185831791608081901c916001600160801b0390911690811561081757610813866107fa600185610c56565b016001015460c081901c916001600160c01b0390911690565b5090505b814382141561082e5761082b600184610c56565b90505b848160018901015543821461085257610852878561084d866001610c1e565b610abc565b5050505050505050505050565b60008061086d846020015190565b6001600160a01b03841660009081526020919091526040902080549091506001600160801b0316806108a457600092505050610199565b60006108b5836107fa600185610c56565b979650505050505050565b60018101835b838110156105bc576000828201556001016108c6565b6001600160801b031660809190911b179055565b6000807f7b1a68ec3e3284b167e69db1c622dcfa612281976b71d7e2d239dbe16a75891a90506000818460405160200161092b929190610bab565b60408051601f198184030181529190528051602090910120949350505050565b6000808261098b5760405162461bcd60e51b815260206004820152600d60248201526c1d5b9a5b9a5d1a585b1a5e9959609a1b60448201526064016105b3565b8585111561099857600080fd5b8284106109a457600080fd5b60006109b1600185610c56565b90508460005b828214610a4457600060026109cc8585610c1e565b6109d7906001610c1e565b6109e19190610c36565b6001818d01015490915060c081901c906001600160c01b03168b821415610a1257929650919450610aa59350505050565b8b821015610a2e578a821015610a26578293505b829450610a3c565b610a39600184610c56565b95505b5050506109b7565b60018a8301015460c081901c906001600160c01b03168a821115610a9b5760405162461bcd60e51b815260206004820152600e60248201526d536561726368204661696c75726560901b60448201526064016105b3565b9195509093505050505b9550959350505050565b818311156108c057600080fd5b8082106108dc57600080fd5b60008060208385031215610ada578182fd5b823567ffffffffffffffff80821115610af1578384fd5b818501915085601f830112610b04578384fd5b813581811115610b12578485fd5b8660208260051b8501011115610b26578485fd5b60209290920196919550909350505050565b600060208284031215610b49578081fd5b5035919050565b60008060408385031215610b62578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015610ba057815187529582019590820190600101610b84565b509495945050505050565b82815260008251815b81811015610bd057602081860181015185830182015201610bb4565b81811115610be15782602083860101525b50919091016020019392505050565b604081526000610c036040830185610b71565b8281036020840152610c158185610b71565b95945050505050565b60008219821115610c3157610c31610c88565b500190565b600082610c5157634e487b7160e01b81526012600452602481fd5b500490565b600082821015610c6857610c68610c88565b500390565b6000600019821415610c8157610c81610c88565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204fb40a32bd51bf7ab6d1f9a7693b7e07f40027acd78065e1c111e7c5925fd49664736f6c63430008040033";
